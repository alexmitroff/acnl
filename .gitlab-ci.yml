stages:
    - build
    - deploy

# This file is a template, and might need editing before it works on your project.
.build-staging-image:
  # Official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f ./docker/acnl_django/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker build --pull -t "custom_nginx:$CI_COMMIT_REF_SLUG" -f ./docker/nginx_django/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE_nginx:$CI_COMMIT_REF_SLUG"
  only:
    - master

deploy-staging-image:
  image: python:3.8
  stage: deploy
  before_script:
    - apt update -y
    - apt install openssh-client rsync sshpass -y
    - eval $(ssh-agent -s)

    - echo "$SSH_ACNL_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

    - export SSHPASS=$SSH_ACNL_PSWD
    - pip install pyyaml
  script:
    - echo 'Send docker-compose to server'
    - python ./generate_docker_compose.py -p acnl -i $CI_REGISTRY_IMAGE -t $CI_COMMIT_REF_SLUG
    - rsync -rv --verbose --no-perms --chmod=D0700,F0700 --rsh="sshpass -e ssh -o StrictHostKeyChecking=no" ./production.gen.yaml $SSH_ACNL_USER@$SSH_ACNL_SERVER:/home/$SSH_ACNL_USER/deploy/docker-compose.yaml
    - ssh $SSH_ACNL_USER@$SSH_ACNL_SERVER:/home/$SSH_ACNL_USER/deploy "cat docker-compose.yaml"
  only:
    - master

# docker-build:
#   # Official docker image.
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
#   except:
#     - master
