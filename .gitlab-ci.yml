stages:
    - build
    - deploy

build-staging-image:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f ./deploy/acnl_django/Dockerfile .
    - docker build --pull -t "$CI_REGISTRY_IMAGE:nginx" -f ./deploy/acnl_nginx/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - docker push "$CI_REGISTRY_IMAGE:nginx"
  only:
    - tags

deploy-staging-image:
  image: python:3.8
  stage: deploy
  before_script:
    - apt update -y
    - apt install openssh-client rsync sshpass -y
    - eval $(ssh-agent -s)
    - export SSHPASS=$SSH_ACNL_PSWD
    - pip install pyyaml
  script:
    - echo 'Send docker-compose to server'
    - python ./generate_docker_compose.py -p acnl -i $CI_REGISTRY_IMAGE -t $CI_COMMIT_REF_SLUG --pguser $PG_AUTH_USER --pgpwd $PG_AUTH_PASSWORD --pjdbuser $PG_PRJ_USER  --pjdbpwd $PG_PRJ_PASSWORD
    - rsync -rv --verbose --no-perms --chmod=D0700,F0700 --rsh="sshpass -e ssh -o StrictHostKeyChecking=no" ./production.gen.yaml $SSH_ACNL_USER@$SSH_ACNL_SERVER:/home/$SSH_ACNL_USER/acnl/docker-compose.yaml
    - sshpass -e ssh -o StrictHostKeyChecking=no $SSH_ACNL_USER@$SSH_ACNL_SERVER "cd /home/$SSH_ACNL_USER/acnl; echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY; docker-compose pull; docker-compose up -d;"
  only:
    - tags
