# Generated by Django 2.2.5 on 2019-09-27 09:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('encyclopedia', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BugType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='slug')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Rarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(verbose_name='level')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='slug')),
                ('color', models.CharField(blank=True, help_text='Example: 120,50%,50%', max_length=100, null=True, validators=[django.core.validators.RegexValidator(re.compile('^(\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\Z'), "Enter a valid 'HSL' consisting of hue 0-360, saturation 0%-100%, lightness 0%-100%", 'invalid')], verbose_name='name')),
            ],
            options={
                'verbose_name': 'rarity level',
                'verbose_name_plural': 'rarity levels',
                'db_table': 'creatures.rarity',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.IntegerField(default=0, verbose_name='position')),
                ('show', models.BooleanField(default=False, verbose_name='show')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='slug')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('desc', models.TextField(verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Shadow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.PositiveIntegerField(default=1)),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='slug')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='shadows', verbose_name='picture')),
            ],
        ),
        migrations.CreateModel(
            name='Creature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('slug', models.SlugField(unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), "Enter a valid 'slug' consisting of letters, numbers, underscores or hyphens.", 'invalid')], verbose_name='slug')),
                ('position', models.IntegerField(default=0, verbose_name='position')),
                ('picture', models.ImageField(upload_to='units', verbose_name='image')),
                ('price', models.IntegerField(default=100, verbose_name='price')),
                ('inhabit', models.CharField(blank=True, max_length=100, verbose_name='location')),
                ('is_island', models.BooleanField(default=False, verbose_name='Available on island')),
                ('time_appearance', models.TimeField(verbose_name='appearance time')),
                ('time_disappearance', models.TimeField(verbose_name='disappearance time')),
                ('months', models.ManyToManyField(to='encyclopedia.Month')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_creatures.creature_set+', to='contenttypes.ContentType')),
                ('rarity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creatures.Rarity')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creatures.Section')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Fish',
            fields=[
                ('creature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creatures.Creature')),
                ('shadow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creatures.Shadow')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('creatures.creature',),
        ),
        migrations.CreateModel(
            name='DeepSea',
            fields=[
                ('creature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creatures.Creature')),
                ('shadow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='creatures.Shadow')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('creatures.creature',),
        ),
        migrations.CreateModel(
            name='Bug',
            fields=[
                ('creature_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='creatures.Creature')),
                ('bug_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='creatures.BugType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('creatures.creature',),
        ),
    ]
